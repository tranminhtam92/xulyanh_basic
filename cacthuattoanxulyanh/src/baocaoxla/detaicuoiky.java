/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package baocaoxla;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author tao
 */
public class detaicuoiky extends javax.swing.JFrame {

    /**
     * Creates new form detaicuoiky
     */
    private BufferedImage img;
    private BufferedImage newimg;
    private xulydetai xuly = new xulydetai();
    private String haftone = "";
    long start, end;

    public detaicuoiky() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        txtgamma = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jFrame2 = new javax.swing.JFrame();
        jLabel3 = new javax.swing.JLabel();
        cbbit0 = new javax.swing.JCheckBox();
        cbbit1 = new javax.swing.JCheckBox();
        cbbit2 = new javax.swing.JCheckBox();
        cbbit3 = new javax.swing.JCheckBox();
        cbbit4 = new javax.swing.JCheckBox();
        cbbit5 = new javax.swing.JCheckBox();
        cbbit6 = new javax.swing.JCheckBox();
        cbbit7 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jFrame3 = new javax.swing.JFrame();
        txtpixel = new javax.swing.JTextField();
        btok_halftones = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jFrame4 = new javax.swing.JFrame();
        txtsigma = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jMenuItem3 = new javax.swing.JMenuItem();
        lbimage = new javax.swing.JLabel();
        btHistogram = new javax.swing.JButton();
        lbimage1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btsave = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txttime = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnitopen = new javax.swing.JMenuItem();
        menugray = new javax.swing.JMenu();
        menubinary = new javax.swing.JMenu();
        menucomp = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        menunegative = new javax.swing.JMenu();
        menubitplane = new javax.swing.JMenu();
        menuhideimage = new javax.swing.JMenu();
        menuextract = new javax.swing.JMenu();
        menufilter = new javax.swing.JMenu();
        mnitemmax = new javax.swing.JMenuItem();
        mnitemmin = new javax.swing.JMenuItem();
        muitemmedian = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        mnitPattening = new javax.swing.JMenuItem();
        mnitdither = new javax.swing.JMenuItem();
        muiterror = new javax.swing.JMenuItem();
        muSpatialFiltering = new javax.swing.JMenu();
        mnitLaplacian = new javax.swing.JMenuItem();
        mnitSharpened = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        jFrame1.setFocusable(false);
        jFrame1.setMinimumSize(new java.awt.Dimension(200, 150));
        jFrame1.setResizable(false);

        jLabel4.setText("gamma");

        jButton1.setText("ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtgamma, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtgamma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jFrame2.setFocusable(false);
        jFrame2.setMinimumSize(new java.awt.Dimension(95, 350));
        jFrame2.setResizable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Bitplane");

        cbbit0.setText("bitplane 0");

        cbbit1.setText("bitplane 1");

        cbbit2.setText("bitplane 2");

        cbbit3.setText("bitplane 3");

        cbbit4.setText("bitplane 4");

        cbbit5.setText("bitplane 5");

        cbbit6.setText("bitplane 6");

        cbbit7.setText("bitplane 7");

        jButton3.setText("Ok");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbit3)
                    .addComponent(cbbit4)
                    .addComponent(cbbit2)
                    .addComponent(cbbit5)
                    .addComponent(cbbit6)
                    .addComponent(cbbit7)
                    .addComponent(cbbit0)
                    .addComponent(cbbit1)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(cbbit0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbbit1)
                .addComponent(cbbit2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbbit3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbbit4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbbit5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbbit6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbit7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jFrame3.setMinimumSize(new java.awt.Dimension(200, 150));

        btok_halftones.setText("Ok");
        btok_halftones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btok_halftonesActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Pixel");

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtpixel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btok_halftones)
                .addGap(56, 56, 56))
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtpixel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jFrame3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btok_halftones)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jFrame4.setMinimumSize(new java.awt.Dimension(240, 170));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Sigma");

        jButton4.setText("procces");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(txtsigma, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jFrame4Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jButton4))
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsigma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btHistogram.setText("Histogram");
        btHistogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHistogramActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("original image");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("processed image");

        btsave.setText("Save");
        btsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsaveActionPerformed(evt);
            }
        });

        jButton2.setText("Histogram");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Ms");

        txttime.setEnabled(false);

        jMenu1.setText("File");

        mnitopen.setText("Open");
        mnitopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitopenActionPerformed(evt);
            }
        });
        jMenu1.add(mnitopen);

        jMenuBar1.add(jMenu1);

        menugray.setText("gray");
        menugray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menugrayMouseClicked(evt);
            }
        });
        jMenuBar1.add(menugray);

        menubinary.setText("B&W");
        menubinary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menubinaryMouseClicked(evt);
            }
        });
        jMenuBar1.add(menubinary);

        menucomp.setText("comparision");
        menucomp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menucompMouseClicked(evt);
            }
        });
        jMenuBar1.add(menucomp);

        jMenu2.setText("Equalization");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Powerlaw");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        menunegative.setText("Negative");
        menunegative.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menunegativeMouseClicked(evt);
            }
        });
        jMenuBar1.add(menunegative);

        menubitplane.setText("Bitplane");
        menubitplane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menubitplaneMouseClicked(evt);
            }
        });
        jMenuBar1.add(menubitplane);

        menuhideimage.setText("Hide_image");
        menuhideimage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuhideimageMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuhideimage);

        menuextract.setText("extract_image");
        menuextract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuextractMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuextract);

        menufilter.setText("Filter");

        mnitemmax.setText("Max");
        mnitemmax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitemmaxActionPerformed(evt);
            }
        });
        menufilter.add(mnitemmax);

        mnitemmin.setText("Min");
        mnitemmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitemminActionPerformed(evt);
            }
        });
        menufilter.add(mnitemmin);

        muitemmedian.setText("Median");
        muitemmedian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muitemmedianActionPerformed(evt);
            }
        });
        menufilter.add(muitemmedian);

        jMenuItem1.setText("Avg");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menufilter.add(jMenuItem1);

        jMenuItem2.setText("Gaussian");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menufilter.add(jMenuItem2);

        jMenuBar1.add(menufilter);

        jMenu4.setText("Hafltoning");

        mnitPattening.setText("Pattening");
        mnitPattening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitPatteningActionPerformed(evt);
            }
        });
        jMenu4.add(mnitPattening);

        mnitdither.setText("Dither_matrix");
        mnitdither.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitditherActionPerformed(evt);
            }
        });
        jMenu4.add(mnitdither);

        muiterror.setText("Error_diffusion");
        muiterror.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muiterrorActionPerformed(evt);
            }
        });
        jMenu4.add(muiterror);

        jMenuBar1.add(jMenu4);

        muSpatialFiltering.setText("SpatialFiltering");

        mnitLaplacian.setText("Laplacian");
        mnitLaplacian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitLaplacianActionPerformed(evt);
            }
        });
        muSpatialFiltering.add(mnitLaplacian);

        mnitSharpened.setText("Sharpened");
        mnitSharpened.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnitSharpenedActionPerformed(evt);
            }
        });
        muSpatialFiltering.add(mnitSharpened);

        jMenuBar1.add(muSpatialFiltering);

        jMenu5.setText("Sobel");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu5ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu6.setText("Fundamental");

        jMenuItem6.setText("Erosion");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem6);

        jMenuItem4.setText("Dilation");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem4);

        jMenuItem5.setText("Boundary extraction ");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem5);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lbimage, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txttime, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbimage1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(btHistogram)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbimage, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbimage1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txttime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(btsave)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btHistogram)
                    .addComponent(jButton2))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnitopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitopenActionPerformed
        JFileChooser fc = new JFileChooser();
        int f = fc.showOpenDialog(this);
        if (f == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                img = ImageIO.read(new File(file.getPath()));
                ImageIcon icon = new ImageIcon(img.getScaledInstance(lbimage.getWidth(), lbimage.getHeight(), Image.SCALE_SMOOTH));
                lbimage.setIcon(icon);
            } catch (IOException ex) {
                Logger.getLogger(compare.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mnitopenActionPerformed

    private void btHistogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHistogramActionPerformed
        Histogram histogram = new Histogram(img);
        histogram.display(img);
        histogram.setSize(500, 400);
        histogram.setVisible(true);

    }//GEN-LAST:event_btHistogramActionPerformed

    private void menugrayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menugrayMouseClicked
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.gray(img);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_menugrayMouseClicked

    private void menubinaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubinaryMouseClicked
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.bnimage(img);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_menubinaryMouseClicked

    private void menucompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menucompMouseClicked
        compare a = new compare();
        //a.setBounds(10, 10,100,100);
        a.setVisible(true);
    }//GEN-LAST:event_menucompMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            Histogram histogram = new Histogram(newimg);
            histogram.display(newimg);
            histogram.setSize(500, 400);
            histogram.setVisible(true);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsaveActionPerformed
        JFileChooser fc = new JFileChooser();
        int f = fc.showSaveDialog(this);
        if (f == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                ImageIO.write(newimg, "jpg", file);
            } catch (IOException ex) {
                Logger.getLogger(detaicuoiky.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btsaveActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.equalization(img);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        jFrame1.setVisible(true);

    }//GEN-LAST:event_jMenu3MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (img != null) {

            start = System.currentTimeMillis();
            newimg = xuly.powerlaw(img, Float.parseFloat(txtgamma.getText()));
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void menunegativeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menunegativeMouseClicked
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.negative(img);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_menunegativeMouseClicked

    private void menubitplaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubitplaneMouseClicked
        jFrame2.setVisible(true);
    }//GEN-LAST:event_menubitplaneMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (img != null) {
            int[] choose = new int[8];
            if (cbbit0.isSelected()) {
                choose[0] = 1;
            } else {
                choose[0] = 0;
            }
            if (cbbit1.isSelected()) {
                choose[1] = 1;
            } else {
                choose[1] = 0;
            }
            if (cbbit2.isSelected()) {
                choose[2] = 1;
            } else {
                choose[2] = 0;
            }
            if (cbbit3.isSelected()) {
                choose[3] = 1;
            } else {
                choose[3] = 0;
            }
            if (cbbit4.isSelected()) {
                choose[4] = 1;
            } else {
                choose[4] = 0;
            }
            if (cbbit5.isSelected()) {
                choose[5] = 1;
            } else {
                choose[5] = 0;
            }
            if (cbbit6.isSelected()) {
                choose[6] = 1;
            } else {
                choose[6] = 0;
            }
            if (cbbit7.isSelected()) {
                choose[7] = 1;
            } else {
                choose[7] = 0;
            }
            newimg = xuly.bitplane(img, choose);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void menuhideimageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuhideimageMouseClicked
        hideimage hide = new hideimage();
        hide.setVisible(true);
    }//GEN-LAST:event_menuhideimageMouseClicked

    private void menuextractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuextractMouseClicked
        new extractimage().setVisible(true);
    }//GEN-LAST:event_menuextractMouseClicked

    private void mnitemminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitemminActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.min_filter(img, 3);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_mnitemminActionPerformed

    private void mnitemmaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitemmaxActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.max_filter(img, 3);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_mnitemmaxActionPerformed

    private void muitemmedianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muitemmedianActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.median_filter(img, 3);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_muitemmedianActionPerformed

    private void mnitditherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitditherActionPerformed
        haftone = "dither";
        txtpixel.setText("");
        jFrame3.setVisible(true);
    }//GEN-LAST:event_mnitditherActionPerformed

    private void btok_halftonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btok_halftonesActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.gray(img);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage.getWidth(), lbimage.getHeight(), Image.SCALE_SMOOTH));
            lbimage.setIcon(icon);
            if (haftone.equals("dither")) {
                newimg = xuly.dither(newimg, Integer.parseInt(txtpixel.getText()));
            }
            if (haftone.equals("patten")) {
                newimg = xuly.patterning(newimg, Integer.parseInt(txtpixel.getText()));
            }
            if (haftone.equals("error")) {
                newimg = xuly.error_diffusion(newimg, Integer.parseInt(txtpixel.getText()));
            }
            ImageIcon icon1 = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon1);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_btok_halftonesActionPerformed

    private void mnitPatteningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitPatteningActionPerformed
        haftone = "patten";
        txtpixel.setText("");
        jFrame3.setVisible(true);
    }//GEN-LAST:event_mnitPatteningActionPerformed

    private void mnitLaplacianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitLaplacianActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.Laplacian(img);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_mnitLaplacianActionPerformed

    private void mnitSharpenedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitSharpenedActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.Sharpened(img);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_mnitSharpenedActionPerformed

    private void jMenu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu5ActionPerformed

    }//GEN-LAST:event_jMenu5ActionPerformed

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        new sobel().setVisible(true);
    }//GEN-LAST:event_jMenu5MouseClicked

    private void muiterrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muiterrorActionPerformed
        haftone = "error";
        txtpixel.setText("");
        jFrame3.setVisible(true);
    }//GEN-LAST:event_muiterrorActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.avg(img, 3);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jFrame4.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.gaussian(img, Float.parseFloat(txtsigma.getText()));
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.bnimage(img);
            newimg = xuly.dilation(newimg);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.bnimage(img);
            newimg = xuly.erosion(newimg);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if (img != null) {
            start = System.currentTimeMillis();
            newimg = xuly.bnimage(img);
            newimg = xuly.boundary(newimg);
            ImageIcon icon = new ImageIcon(newimg.getScaledInstance(lbimage1.getWidth(), lbimage1.getHeight(), Image.SCALE_SMOOTH));
            lbimage1.setIcon(icon);
            end = System.currentTimeMillis();
            long time = end - start;
            txttime.setText(String.valueOf(time));
        } else {
            JOptionPane.showMessageDialog(this, "you not choose image");
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(detaicuoiky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(detaicuoiky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(detaicuoiky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(detaicuoiky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new detaicuoiky().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btHistogram;
    private javax.swing.JButton btok_halftones;
    private javax.swing.JButton btsave;
    private javax.swing.JCheckBox cbbit0;
    private javax.swing.JCheckBox cbbit1;
    private javax.swing.JCheckBox cbbit2;
    private javax.swing.JCheckBox cbbit3;
    private javax.swing.JCheckBox cbbit4;
    private javax.swing.JCheckBox cbbit5;
    private javax.swing.JCheckBox cbbit6;
    private javax.swing.JCheckBox cbbit7;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JLabel lbimage;
    private javax.swing.JLabel lbimage1;
    private javax.swing.JMenu menubinary;
    private javax.swing.JMenu menubitplane;
    private javax.swing.JMenu menucomp;
    private javax.swing.JMenu menuextract;
    private javax.swing.JMenu menufilter;
    private javax.swing.JMenu menugray;
    private javax.swing.JMenu menuhideimage;
    private javax.swing.JMenu menunegative;
    private javax.swing.JMenuItem mnitLaplacian;
    private javax.swing.JMenuItem mnitPattening;
    private javax.swing.JMenuItem mnitSharpened;
    private javax.swing.JMenuItem mnitdither;
    private javax.swing.JMenuItem mnitemmax;
    private javax.swing.JMenuItem mnitemmin;
    private javax.swing.JMenuItem mnitopen;
    private javax.swing.JMenu muSpatialFiltering;
    private javax.swing.JMenuItem muitemmedian;
    private javax.swing.JMenuItem muiterror;
    private javax.swing.JTextField txtgamma;
    private javax.swing.JTextField txtpixel;
    private javax.swing.JTextField txtsigma;
    private javax.swing.JTextField txttime;
    // End of variables declaration//GEN-END:variables
}
